# Go Options Pattern
Go Options Pattern
15:04 2 Jan 2006
Tags: Go, otel, opentelemetry, trickster, grafana, prometheus, influx, time-series
Summary: Describing the options pattern in Go by way of adding Open Telemetry to the open source project Trickster

Guy J Grigsby
Engineer, The New York Times
guy@grigsby.dev
https://grigsby.dev
@usernamevalid

## Background

- Programming languages need a way to create flexible constructors.
- Sometimes structs/objects need to be created using different parameters
- Stucts/objects may need initialization that is invisible to the caller.

.image images/constuct-gopher.png _ 550

.caption _Gopher_ by [[https://instagram.com/reneefrench][Renee French]]. Used and modified with permission.

## How do other languages do it?

- Overloading
- Config Object
- Naked Instantiation

## Overloading {#overloading}

- Same function
- Different parameters
- Can get out of control stringing cters

**Java**

.code java/Overload.java /^class/,/{/
.code java/Overload.java /^\s+Overload\(String str, int i\)/,/^\s+}/
.code java/Overload.java /^\s+Overload\(\)/,/^\s+}/
.code java/Overload.java /^\s+Overload\(String str\)/,/^\s+}/


## Config object {#config}

- Terse
- Unclear
- No compile time checks

**Javascript**

.code js/config.js /^class/,/{/
.code js/config.js /^\s+constructor/,/\s+}/
.code js/config.js /START OMIT/,/END OMIT/

## Naked Initialization {#initialization}

- Clear
- Simple
- No initialization (including defaults)

**Rust**

.code rust/struct.rs /START OMIT/,/END OMIT/

##
**Go**

.code go/struct.go /START OMIT/,/END OMIT/

## Enter Go Options

.image images/gopher-options.jpg _ 1000

.caption _Gopher_ by [[https://instagram.com/reneefrench][Renee French]]. Used and modified with permission.

## What are My Options?

Options provide a way in go to create flexible constructors that allow for initialization. It also allows access to unexported variables at time of creation only.

Simple Example:

.play cmd/single/main.go /^func main/,/^}/ HLcter


## Details

.code options.go /^type Context/,/^}/

.caption This is a contrived example. _Please_ don't override [[https://golang.org/pkg/context/][`Context`]].

## The Constructor

.code options.go /^func NewContext/,/^}/

## The Options

.code options.go /^\/\/ WithUsername/,/^}/

.code options.go /^\/\/ WithTimeout/,/^}/



## More Complex Example

.play cmd/multi/main.go /^func main/,/^}/ HLcter
